(window.webpackJsonp=window.webpackJsonp||[]).push([[271],{645:function(t,a,s){"use strict";s.r(a);var r=s(8),v=Object(r.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"服务规划"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#服务规划"}},[t._v("#")]),t._v(" 服务规划")]),t._v(" "),a("h4",{attrs:{id:"概述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[t._v("#")]),t._v(" 概述")]),t._v(" "),a("p",[t._v("此研发平台架构设计有按的是通用型业务架构设计，而非指定于某种特定业务，以积累基础组件为前提,\n在微服务架构做为载体，但是又有不一样的设计思路，此请注意。微服务架构设计着重对于服务划分，\n而中台服务着重于中后台的沉淀和积累")]),t._v(" "),a("h4",{attrs:{id:"原则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#原则"}},[t._v("#")]),t._v(" 原则")]),t._v(" "),a("ul",[a("li",[t._v('按“重中台”+"轻应用"设计，业务应用逻辑思路放在前端应用，推荐是尽量减少或不拆分前端服务;')]),t._v(" "),a("li",[t._v("重中台的建设，在于前端应用共性部分的抽取和后期的沉淀，形成中台业务服务;")]),t._v(" "),a("li",[t._v("中台服务调用基础服务，或者其它同级服务，中台服务为服务的中层，用于业务共性(共享)抽取；")]),t._v(" "),a("li",[t._v("同一级服务之间可以互相调用，只能自下往下调用，平级调用，禁止自下往上调用，以避免服务混乱及维护混乱。")]),t._v(" "),a("li",[t._v("基础服务只为调用设计，位于服务的底层或者中间层，基础服务禁止调用中台服务；")]),t._v(" "),a("li",[t._v("服务单库设计,以减少迁移，服务之前影响等，每种服务目录按 999 个服务规划。")])])])}),[],!1,null,null,null);a.default=v.exports}}]);