(window.webpackJsonp=window.webpackJsonp||[]).push([[183],{555:function(n,e,a){"use strict";a.r(e);var t=a(8),s=Object(t.a)({},(function(){var n=this,e=n._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[e("h1",{attrs:{id:"源码安装"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#源码安装"}},[n._v("#")]),n._v(" 源码安装")]),n._v(" "),e("blockquote",[e("p",[n._v("此为当前中台开发环境的部署方式")])]),n._v(" "),e("h2",{attrs:{id:"工程示例"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#工程示例"}},[n._v("#")]),n._v(" 工程示例")]),n._v(" "),e("p",[n._v("源码安装前后端发布示例"),e("a",{attrs:{href:"https://gitee.com/alinesno-cloud/alinesno-demo-gateway-open/tree/master/demo-deploy",target:"_blank",rel:"noopener noreferrer"}},[n._v("打开"),e("OutboundLink")],1)]),n._v(" "),e("h2",{attrs:{id:"概述"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[n._v("#")]),n._v(" 概述")]),n._v(" "),e("p",[n._v("源码型安装是基于客户型的源码安装形式，主要针对的使用场景是客户源码型采购的客户进行安装，\n方便内部的进一步落地和参考。")]),n._v(" "),e("h2",{attrs:{id:"本内容你将获得"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#本内容你将获得"}},[n._v("#")]),n._v(" 本内容你将获得")]),n._v(" "),e("ul",[e("li",[n._v("Jenkinsfile的配置")]),n._v(" "),e("li",[n._v("前后端部署的方式")]),n._v(" "),e("li",[n._v("Dockcer/K8S部署的方式")])]),n._v(" "),e("h2",{attrs:{id:"前置条件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#前置条件"}},[n._v("#")]),n._v(" 前置条件")]),n._v(" "),e("p",[n._v("这里包括两部分，一部分是jenkins，另一部分是基础环境")]),n._v(" "),e("ul",[e("li",[n._v("Docker/K8S已部署安装")]),n._v(" "),e("li",[n._v("Jenkins插件安装:Dingtalk插件/PublishSSHOver插件")]),n._v(" "),e("li",[n._v("Jenkins密钥配置名称:alinesno-platform-docker-cret/alinesno-platform-qiniu-cret，用于docker推送和CDN配置上传")])]),n._v(" "),e("h2",{attrs:{id:"环境变量配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#环境变量配置"}},[n._v("#")]),n._v(" 环境变量配置")]),n._v(" "),e("p",[n._v("后端服务的变量配置:")]),n._v(" "),e("div",{staticClass:"language-jenkinsfile extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("environment {\n    // 构建参数\n    PROJECT_NAME = 'alinesno-cloud-transfer-boot'\n    PRO_VERSION = '0.0.1-SNAPSHOT'\n    EXPOSE_PORT = '28480'\n    DOCKER_PORT = '28280'\n    ALIYUN_CR_HOST = 'registry.cn-shenzhen.aliyuncs.com'\n    ALIYUN_CR_NAMESPACE = 'alinesno-cloud-incubator'\n    PROFILES_ACTIVE = 'pro'\n\n    // 认证信息\n    DOCKER_CREDENTIALS = credentials('alinesno-platform-docker-cret')\n    DEPLOY = \"docker\"   // docker/k8s\n    DOCKER_NODE = \"slave-build-102\"  // 发布Docker的服务器(k8s发布则不用配置)\n}\n")])])]),e("p",[n._v("前端服务的变量配置")]),n._v(" "),e("div",{staticClass:"language-jenkinsfile extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("environment {\n    // 构建参数\n    PROJECT_NAME = 'alinesno-cloud-transfer-ui'\n    PRO_VERSION = '0.0.1-SNAPSHOT'\n    EXPOSE_PORT = '28480'\n    DOCKER_PORT = '80'\n    ALIYUN_CR_HOST = 'registry.cn-shenzhen.aliyuncs.com'\n    ALIYUN_CR_NAMESPACE = 'alinesno-cloud-incubator'\n    PROFILES_ACTIVE = 'pro'\n\n    // 认证信息\n    DOCKER_CREDENTIALS = credentials('alinesno-platform-docker-cret')\n    QINIU_CREDENTIALS = credentials('alinesno-platform-qiniu-cret')\n    DEPLOY = \"docker\"\n    DEPLOY_CDN = \"true\"\n    DEPLOY_CDN_HOST = \"http://data.linesno.com\"\n    DOCKER_NODE = \"slave-build-102\"\n\n    // 服务端信息\n    MANAGER_API=\"http://alinesno-transfer.admin.beta.linesno.com\"\n}\n")])])]),e("h2",{attrs:{id:"预警通知配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#预警通知配置"}},[n._v("#")]),n._v(" 预警通知配置")]),n._v(" "),e("p",[n._v("这里预警的配置使用jenkins集成配置更为方便，没有集成到jenkinsfile里面，主要看团队需求")]),n._v(" "),e("h2",{attrs:{id:"其它"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#其它"}},[n._v("#")]),n._v(" 其它")]),n._v(" "),e("ul",[e("li",[n._v("k8s安装需要提前安装仓库空间，命令如下:"),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# 假如名称空间为`alinesno-cloud-platform`")]),n._v("\nkubectl create namespace alinesno-cloud-platform\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# 创建空间docker-密钥")]),n._v("\nkubectl create secret docker-registry docker-login "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("\\")]),n._v("\n    --docker-server"),e("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[n._v("'registry.cn-shenzhen.aliyuncs.com'")]),n._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("\\")]),n._v("\n    --docker-username"),e("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[n._v("'用户名'")]),n._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("\\")]),n._v("\n    --docker-password"),e("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[n._v("'密码'")]),n._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("\\")]),n._v("\n    "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[n._v("-n")]),n._v(" alinesno-cloud-platform\n")])])])])])])}),[],!1,null,null,null);e.default=s.exports}}]);