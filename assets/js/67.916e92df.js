(window.webpackJsonp=window.webpackJsonp||[]).push([[67],{440:function(t,a,s){"use strict";s.r(a);var n=s(8),e=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"数据接口路由配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据接口路由配置"}},[t._v("#")]),t._v(" 数据接口路由配置")]),t._v(" "),a("h2",{attrs:{id:"概述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[t._v("#")]),t._v(" 概述")]),t._v(" "),a("p",[t._v("通过对网关路由维护与管理，实现路由、过滤器、熔断、鉴权、限流、日志、监控等功，在服务管理上进行路由配置")]),t._v(" "),a("img",{attrs:{src:"/data/data-security/01_route.png",width:"70%"}}),t._v(" "),a("h2",{attrs:{id:"本内容你将获得"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#本内容你将获得"}},[t._v("#")]),t._v(" 本内容你将获得")]),t._v(" "),a("ul",[a("li",[t._v("路由的添加与修改")]),t._v(" "),a("li",[t._v("服务配置")]),t._v(" "),a("li",[t._v("熔断器配置")]),t._v(" "),a("li",[t._v("监控器配置")]),t._v(" "),a("li",[t._v("过滤器配置")]),t._v(" "),a("li",[t._v("限流器配置")]),t._v(" "),a("li",[t._v("鉴权器配置")])]),t._v(" "),a("h2",{attrs:{id:"路由的添加与修改"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#路由的添加与修改"}},[t._v("#")]),t._v(" 路由的添加与修改")]),t._v(" "),a("p",[t._v("路由添加与修改步骤：")]),t._v(" "),a("ul",[a("li",[t._v("点击服务管理，进入服务管理页")]),t._v(" "),a("li",[t._v("点击创建网关服务按钮或点击已有服务 管理 > 编辑，进入路由配置页")]),t._v(" "),a("li",[t._v("进行路由配置")]),t._v(" "),a("li",[t._v("配置完成点击发布即可完成新增或修改")])]),t._v(" "),a("p",[t._v("注意:")]),t._v(" "),a("ul",[a("li",[t._v("RoutId、系统代号、名称、服务URL、断言Path是必填项")])]),t._v(" "),a("h2",{attrs:{id:"服务配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#服务配置"}},[t._v("#")]),t._v(" 服务配置")]),t._v(" "),a("ul",[a("li",[t._v("网关服务URL： 用于配置后端服务URL，示例 http://server:port")]),t._v(" "),a("li",[t._v("断言Path： 用于匹配路由路径")]),t._v(" "),a("li",[t._v("断言Header：请求的头部需匹配该配置")]),t._v(" "),a("li",[t._v("过滤StripPrefix： 截取断言Path多节斜杠后内容，截取数量等于该配置的值")]),t._v(" "),a("li",[t._v("断言Host： 请求的Host需匹配该配置")]),t._v(" "),a("li",[t._v("断言RemoteAddr： 远程ip要匹配该值，示例: RemoteAddr=192.168.1.1/100")]),t._v(" "),a("li",[t._v("参数RequestParameter： 往请求添加参数，示例: RequestParameter=version,v1.0")]),t._v(" "),a("li",[t._v("重定向RewritePath： 将原始请求Path指向新的Path路径，但网关路由地址不变，如:/foo/abc指向/abc")])]),t._v(" "),a("h2",{attrs:{id:"熔断器配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#熔断器配置"}},[t._v("#")]),t._v(" 熔断器配置")]),t._v(" "),a("p",[t._v("起用熔断器，当响应超时的时候，会触发降级，转到回调路径")]),t._v(" "),a("ul",[a("li",[t._v("全局方法：超时时长设置5000ms，默认回调路径fallbackUri: forward:/fallback")]),t._v(" "),a("li",[t._v("启用自定义：自定义超时时长及降级返回内容，回调路径fallbackUri: forward:/fallback/custom")])]),t._v(" "),a("h2",{attrs:{id:"过滤器配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#过滤器配置"}},[t._v("#")]),t._v(" 过滤器配置")]),t._v(" "),a("p",[t._v("通过过滤器配置，与注册客户端相结合，起到过滤请求的作用")]),t._v(" "),a("ul",[a("li",[t._v("IP过滤：注册的客户端配置的IP才可访问后端服务")]),t._v(" "),a("li",[t._v("TOKEN过滤：请求头或参数带有注册客户端的token才可访问后端服务")]),t._v(" "),a("li",[t._v("ID过滤：请求头或参数带有注册客户端的id才可访问后端服务")])]),t._v(" "),a("p",[t._v("注意：")]),t._v(" "),a("ul",[a("li",[t._v("IP过滤需要配置本网关路由的注册客户端，非注册客户端IP不可访问")]),t._v(" "),a("li",[t._v("IP名单管理中的禁止通行的IP不可访问本网关路由")]),t._v(" "),a("li",[t._v("TOKEN为注册客户端中的JWT通行令牌")])]),t._v(" "),a("h2",{attrs:{id:"限流器配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#限流器配置"}},[t._v("#")]),t._v(" 限流器配置")]),t._v(" "),a("p",[t._v("基于令牌桶算法的限流器，根据IP、URI、REQUESTID来进行限流")]),t._v(" "),a("ul",[a("li",[t._v("IP限流：当访问网关路由URL的IP数量，超出限流规则的约束，则直接拒决请求")]),t._v(" "),a("li",[t._v("URI限流： 当访问网关路由URL的URI数量，超出限流规则的约束，则直接拒决请求")]),t._v(" "),a("li",[t._v("REQUESTID限流：当访问网关路由URL的requestId参数数量，超出限流规则的约束，则直接拒决请求")])]),t._v(" "),a("p",[t._v("代码中相对应KeyResolver：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// IP限流:")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Mono")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("just")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("exchange"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getRequest")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getRemoteAddress")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getAddress")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getHostAddress")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// URI限流：")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Mono")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("just")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("exchange"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getRequest")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getURI")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPath")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// REQUESTID限流：")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Mono")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("justOrEmpty")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("exchange"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getRequest")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getQueryParams")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getFirst")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"requestId"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("defaultIfEmpty")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// defaultIfEmpt("")用来防止返回为null')]),t._v("\n")])])]),a("h2",{attrs:{id:"鉴权器配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#鉴权器配置"}},[t._v("#")]),t._v(" 鉴权器配置")]),t._v(" "),a("p",[t._v("获取请求中信息，通过鉴权器下的配置验证获取的信息，不符合验证规则，则直接拒决请求")]),t._v(" "),a("ul",[a("li",[t._v("HEADER验证： 请求中的所带的HEADER头部信息需与该配置匹配，示例：Accept-Language: zh-CN,zh;q=0.9")]),t._v(" "),a("li",[t._v("IP验证： 如果启用IP过滤，则会先执行IP过滤后，再执行本IP验证，不符合验证规则，则直接拒决请求")]),t._v(" "),a("li",[t._v("参数验证： 获取URL请求串中的所带的参数，验证指定参数值，不符合验证规则，则直接拒决请求")]),t._v(" "),a("li",[t._v("时间验证： 只允许指定时间段内进行访问，不符合验证规则，则直接拒决请求，示例：08:00:00,20:00:00")]),t._v(" "),a("li",[t._v("Cookie验证： 获取客户端请求所带的cookie信息，验证指定cookie参数值，不符合验证规则，则直接拒决请求")])]),t._v(" "),a("h2",{attrs:{id:"其他"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其他"}},[t._v("#")]),t._v(" 其他")]),t._v(" "),a("ul",[a("li",[t._v("无")])])])}),[],!1,null,null,null);a.default=e.exports}}]);