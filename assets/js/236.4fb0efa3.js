(window.webpackJsonp=window.webpackJsonp||[]).push([[236],{610:function(t,e,n){"use strict";n.r(e);var v=n(8),_=Object(v.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"缓存使用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#缓存使用"}},[t._v("#")]),t._v(" 缓存使用")]),t._v(" "),e("p",[t._v("整个系统配置了默认的缓存方案和使用方式，系统默认使用 redis 缓存，并自定义缓存注解，\n在"),e("code",[t._v("Boot")]),t._v("启动类上面添加"),e("code",[t._v("@EnableCaching")]),t._v("注解，web 应用已集成，则不用添加。")]),t._v(" "),e("h2",{attrs:{id:"注解方式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#注解方式"}},[t._v("#")]),t._v(" 注解方式")]),t._v(" "),e("p",[t._v("注解使用示例和方式")]),t._v(" "),e("div",{staticClass:"language-java extra-class"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[e("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Cacheable")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cacheNames "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"manager_account#300"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Page")]),e("span",{pre:!0,attrs:{class:"token generics"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ManagerAccountRecordEntity")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("findAllByWrapperAndPageable")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RestWrapper")]),t._v(" restWrapper"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("findAllByWrapperAndPageable")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("restWrapper"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("说明:")]),t._v(" "),e("ul",[e("li",[t._v("cacheNames 以#为分隔符，第一个为存储的名称，第二个为超时的时间，单位为（秒）")]),t._v(" "),e("li",[t._v("key 生成策略如下，需要注解"),e("code",[t._v("hash")]),t._v("值，类使用"),e("code",[t._v("toString()")]),t._v("操作:"),e("div",{staticClass:"language-java extra-class"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[e("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Bean")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("KeyGenerator")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("keyGenerator")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" method"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" params"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("gt"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StringBuilder")]),t._v(" sb "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StringBuilder")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        sb"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("append")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getClass")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getName")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        sb"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("append")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("method"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getName")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" obj "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" params"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            sb"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("append")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" sb"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])]),t._v(" "),e("h2",{attrs:{id:"方法调用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#方法调用"}},[t._v("#")]),t._v(" 方法调用")]),t._v(" "),e("p",[t._v("方法级调用使用 spring 注入，使用如下:")]),t._v(" "),e("div",{staticClass:"language-java extra-class"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[e("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Autowired")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RedisOperationUtil")]),t._v(" redisUtil"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("h4",{attrs:{id:"keys-相关命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#keys-相关命令"}},[t._v("#")]),t._v(" keys 相关命令")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"center"}},[t._v("NO")]),t._v(" "),e("th",[t._v("方法")]),t._v(" "),e("th",[t._v("描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("1")]),t._v(" "),e("td",[t._v("void delete(String key)")]),t._v(" "),e("td",[t._v("key 存在时删除 key")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("2")]),t._v(" "),e("td",[t._v("void delete(Collection keys)")]),t._v(" "),e("td",[t._v("批量删除 key")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("3")]),t._v(" "),e("td",[t._v("byte[] dump(String key)")]),t._v(" "),e("td",[t._v("序列化 key，返回被序列化的值")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("4")]),t._v(" "),e("td",[t._v("Boolean hasKey(String key)")]),t._v(" "),e("td",[t._v("检查 key 是否存在")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("5")]),t._v(" "),e("td",[t._v("Boolean expire(String key, long timeout, TimeUnit unit)")]),t._v(" "),e("td",[t._v("设置过期时间")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("6")]),t._v(" "),e("td",[t._v("Boolean expireAt(String key, Date date)")]),t._v(" "),e("td",[t._v("设置过期时间")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("7")]),t._v(" "),e("td",[t._v("Set <String> keys(String pattern)")]),t._v(" "),e("td",[t._v("查找所有符合给定模式(pattern)的 key")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("8")]),t._v(" "),e("td",[t._v("Boolean move(String key, int dbIndex)")]),t._v(" "),e("td",[t._v("将当前数据库的 key 移动到给定的数据库 db 当中")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("9")]),t._v(" "),e("td",[t._v("Boolean persist(String key)")]),t._v(" "),e("td",[t._v("移除 key 的过期时间，key 将持久保持")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("10")]),t._v(" "),e("td",[t._v("Long getExpire(String key, TimeUnit unit)")]),t._v(" "),e("td",[t._v("返回 key 的剩余的过期时间")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("11")]),t._v(" "),e("td",[t._v("Long getExpire(String key)")]),t._v(" "),e("td",[t._v("返回 key 的剩余的过期时间")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("12")]),t._v(" "),e("td",[t._v("String randomKey()")]),t._v(" "),e("td",[t._v("从当前数据库中随机返回一个 key")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("13")]),t._v(" "),e("td",[t._v("void rename(String oldKey, String newKey)")]),t._v(" "),e("td",[t._v("修改 key 的名称")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("14")]),t._v(" "),e("td",[t._v("Boolean renameIfAbsent(String oldKey, String newKey)")]),t._v(" "),e("td",[t._v("仅当 newkey 不存在时，将 oldKey 改名为 newkey")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("15")]),t._v(" "),e("td",[t._v("DataType type(String key)")]),t._v(" "),e("td",[t._v("返回 key 所储存的值的类型")])])])]),t._v(" "),e("p",[e("strong",[t._v("TimeUnit 是时间单位，可选值有：")])]),t._v(" "),e("ul",[e("li",[t._v("天:TimeUnit.DAYS、小时:TimeUnit.HOURS、分钟:TimeUnit.MINUTES、秒:TimeUnit.SECONDS、毫秒:TimeUnit.MILLISECONDS。")])]),t._v(" "),e("h4",{attrs:{id:"string-数据类型操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#string-数据类型操作"}},[t._v("#")]),t._v(" String 数据类型操作")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"center"}},[t._v("NO")]),t._v(" "),e("th",[t._v("方法")]),t._v(" "),e("th",[t._v("描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("1")]),t._v(" "),e("td",[t._v("String get(String key)")]),t._v(" "),e("td",[t._v("获取指定 key 的值")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("2")]),t._v(" "),e("td",[t._v("String getRange(String key, long start, long end)")]),t._v(" "),e("td",[t._v("返回 key 中字符串值的子字符")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("3")]),t._v(" "),e("td",[t._v("String getAndSet(String key, String value)")]),t._v(" "),e("td",[t._v("将 key 的值设为 value，并返回 key 旧值")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("4")]),t._v(" "),e("td",[t._v("Boolean getBit(String key, long offset)")]),t._v(" "),e("td",[t._v("对 key 所储存的值，获取指定位置上的 bit")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("5")]),t._v(" "),e("td",[t._v("List multiGet(Collection keys)")]),t._v(" "),e("td",[t._v("批量获取")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}}),t._v(" "),e("td",[t._v("添加相关")]),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("6")]),t._v(" "),e("td",[t._v("void set(String key, String value)")]),t._v(" "),e("td",[t._v("设置指定 key 的值")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("7")]),t._v(" "),e("td",[t._v("boolean setBit(String key, long offset, boolean value)")]),t._v(" "),e("td",[t._v("设置指定位置上的 ASCII 码")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("8")]),t._v(" "),e("td",[t._v("void setEx(String key,String value,long timeout,TimeUnit unit)")]),t._v(" "),e("td",[t._v("将值 value 关联到 key，并设置 key 过期时间")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("9")]),t._v(" "),e("td",[t._v("boolean setIfAbsent(String key, String value)")]),t._v(" "),e("td",[t._v("只有在 key 不存在时设置 key 的值")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("10")]),t._v(" "),e("td",[t._v("void setRange(String key, String value, long offset)")]),t._v(" "),e("td",[t._v("用 value 覆写 key 的值，从偏移量 offset 开始")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("11")]),t._v(" "),e("td",[t._v("void multiSet(Map<String,String> maps)")]),t._v(" "),e("td",[t._v("批量添加")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("12")]),t._v(" "),e("td",[t._v("boolean multiSetIfAbsent(Map<String,String> maps)")]),t._v(" "),e("td",[t._v("批量添加，仅当所有 key 都不存在")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}}),t._v(" "),e("td",[t._v("其他方法")]),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("13")]),t._v(" "),e("td",[t._v("Integer append(String key, String value)")]),t._v(" "),e("td",[t._v("追加到末尾")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("14")]),t._v(" "),e("td",[t._v("Long incrBy(String key, long increment)")]),t._v(" "),e("td",[t._v("增加(自增长), 负数则为自减")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("15")]),t._v(" "),e("td",[t._v("Double incrByFloat(String key, double increment)")]),t._v(" "),e("td",[t._v("增加(自增长), 负数则为自减")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("16")]),t._v(" "),e("td",[t._v("Long size(String key)")]),t._v(" "),e("td",[t._v("获取字符串的长度")])])])]),t._v(" "),e("p",[e("strong",[t._v("关于上面 xxBit 方法的使用：")])]),t._v(" "),e("ul",[e("li",[t._v("例如字符'a'的 ASCII 码是 97，转为二进制是'01100001'，setBit 方法就是把第 offset 位置上变成 0 或者 1，true 是 1，false 是 0。")])]),t._v(" "),e("h4",{attrs:{id:"hash-相关的操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#hash-相关的操作"}},[t._v("#")]),t._v(" Hash 相关的操作")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"center"}},[t._v("NO")]),t._v(" "),e("th",[t._v("方法")]),t._v(" "),e("th",[t._v("描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("1")]),t._v(" "),e("td",[t._v("Object hGet(String key, String field)")]),t._v(" "),e("td",[t._v("获取存储在哈希表中指定字段的值")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("2")]),t._v(" "),e("td",[t._v("Map hGetAll(String key)")]),t._v(" "),e("td",[t._v("获取所有给定字段的值")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("3")]),t._v(" "),e("td",[t._v("List hMultiGet(String key, Collection fields)")]),t._v(" "),e("td",[t._v("获取所有给定字段的值")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}}),t._v(" "),e("td",[t._v("添加相关")]),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("4")]),t._v(" "),e("td",[t._v("void hPut(String key, String hashKey, String value)")]),t._v(" "),e("td",[t._v("添加字段")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("5")]),t._v(" "),e("td",[t._v("void hPutAll(String key, Map maps)")]),t._v(" "),e("td",[t._v("添加多个字段")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("6")]),t._v(" "),e("td",[t._v("Boolean hPutIfAbsent(String key,String hashKey,String value)")]),t._v(" "),e("td",[t._v("仅当 hashKey 不存在时才设置")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}}),t._v(" "),e("td",[t._v("其他方法")]),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("7")]),t._v(" "),e("td",[t._v("Long hDelete(String key, Object... fields)")]),t._v(" "),e("td",[t._v("删除一个或多个哈希表字段")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("8")]),t._v(" "),e("td",[t._v("boolean hExists(String key, String field)")]),t._v(" "),e("td",[t._v("查看哈希表 key 中指定的字段是否存在")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("9")]),t._v(" "),e("td",[t._v("Long hIncrBy(String key, Object field, long increment)")]),t._v(" "),e("td",[t._v("为哈希表 key 中指定字段的值增加 increment")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("10")]),t._v(" "),e("td",[t._v("Double hIncrByFloat(String key, Object field, double delta)")]),t._v(" "),e("td",[t._v("为哈希表 key 中指定字段的值增加 increment")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("11")]),t._v(" "),e("td",[t._v("Set hKeys(String key)")]),t._v(" "),e("td",[t._v("获取所有哈希表中的字段")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("12")]),t._v(" "),e("td",[t._v("Long hSize(String key)")]),t._v(" "),e("td",[t._v("获取哈希表中字段的数量")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("13")]),t._v(" "),e("td",[t._v("List hValues(String key)")]),t._v(" "),e("td",[t._v("获取哈希表中所有值")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("14")]),t._v(" "),e("td",[t._v("Cursor hScan(String key, ScanOptions options)")]),t._v(" "),e("td",[t._v("迭代哈希表中的键值对")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("15")]),t._v(" "),e("td",[t._v("getListCache(final String key, Class<T> targetClass)")]),t._v(" "),e("td",[t._v("获取缓存中的 List，targetClass 是序列化的类")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("16")]),t._v(" "),e("td",[t._v("putListCacheWithExpireTime(String key, List<T> objList, final long expireTime)")]),t._v(" "),e("td",[t._v("把 List 放到缓存，expireTime 是过期策略")])])])]),t._v(" "),e("h4",{attrs:{id:"list-相关的操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#list-相关的操作"}},[t._v("#")]),t._v(" List 相关的操作")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"center"}},[t._v("NO")]),t._v(" "),e("th",[t._v("方法")]),t._v(" "),e("th",[t._v("描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("1")]),t._v(" "),e("td",[t._v("String lIndex(String key, long index)")]),t._v(" "),e("td",[t._v("通过索引获取列表中的元素")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("2")]),t._v(" "),e("td",[t._v("List lRange(String key, long start, long end)")]),t._v(" "),e("td",[t._v("获取列表指定范围内的元素")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}}),t._v(" "),e("td",[t._v("添加相关")]),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("3")]),t._v(" "),e("td",[t._v("Long lLeftPush(String key, String value)")]),t._v(" "),e("td",[t._v("存储在 list 头部")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("4")]),t._v(" "),e("td",[t._v("Long lLeftPushAll(String key, String... value)")]),t._v(" "),e("td",[t._v("存储在 list 头部")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("5")]),t._v(" "),e("td",[t._v("Long lLeftPushAll(String key, Collection value)")]),t._v(" "),e("td",[t._v("存储在 list 头部")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("6")]),t._v(" "),e("td",[t._v("Long lLeftPushIfPresent(String key, String value)")]),t._v(" "),e("td",[t._v("当 list 存在的时候才加入")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("7")]),t._v(" "),e("td",[t._v("lLeftPush(String key, String pivot, String value)")]),t._v(" "),e("td",[t._v("如果 pivot 存在,再 pivot 前面添加")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}}),t._v(" "),e("td"),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("8")]),t._v(" "),e("td",[t._v("Long lRightPush(String key, String value)")]),t._v(" "),e("td",[t._v("存储在 list 尾部")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("9")]),t._v(" "),e("td",[t._v("Long lRightPushAll(String key, String... value)")]),t._v(" "),e("td",[t._v("存储在 list 尾部")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("10")]),t._v(" "),e("td",[t._v("Long lRightPushAll(String key, Collection value)")]),t._v(" "),e("td",[t._v("存储在 list 尾部")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("11")]),t._v(" "),e("td",[t._v("Long lRightPushIfPresent(String key, String value)")]),t._v(" "),e("td",[t._v("当 list 存在的时候才加入")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("12")]),t._v(" "),e("td",[t._v("lRightPush(String key, String pivot, String value)")]),t._v(" "),e("td",[t._v("在 pivot 元素的右边添加值")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}}),t._v(" "),e("td"),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("13")]),t._v(" "),e("td",[t._v("void lSet(String key, long index, String value)")]),t._v(" "),e("td",[t._v("通过索引设置列表元素的值")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}}),t._v(" "),e("td",[t._v("删除相关")]),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("14")]),t._v(" "),e("td",[t._v("String lLeftPop(String key)")]),t._v(" "),e("td",[t._v("移出并获取列表的第一个元素")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("15")]),t._v(" "),e("td",[t._v("String lBLeftPop(String key,long timeout,TimeUnit unit)")]),t._v(" "),e("td",[t._v("移出并获取第一个元素,没有则阻塞直到超时或有为止")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}}),t._v(" "),e("td"),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("16")]),t._v(" "),e("td",[t._v("String lRightPop(String key)")]),t._v(" "),e("td",[t._v("移除并获取列表最后一个元素")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("17")]),t._v(" "),e("td",[t._v("String lBRightPop(String key,long timeout,TimeUnit unit)")]),t._v(" "),e("td",[t._v("移出并获取最后个元素,没有则阻塞直到超时或有为止")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("18")]),t._v(" "),e("td",[t._v("String lRightPopAndLeftPush(String sKey,String dKey)")]),t._v(" "),e("td",[t._v("移除最后一个元素并加到另一个列表并返回")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("19")]),t._v(" "),e("td",[t._v("String lBRightPopAndLeftPush(sKey,dKey,timeout,unit)")]),t._v(" "),e("td",[t._v("移除最后个元素并加到另个列表并返回,阻塞超时或有")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}}),t._v(" "),e("td"),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("20")]),t._v(" "),e("td",[t._v("Long lRemove(String key, long index, String value)")]),t._v(" "),e("td",[t._v("删除集合中值等于 value 得元素")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("21")]),t._v(" "),e("td",[t._v("void lTrim(String key, long start, long end)")]),t._v(" "),e("td",[t._v("裁剪 list")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}}),t._v(" "),e("td",[t._v("其他方法")]),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("22")]),t._v(" "),e("td",[t._v("Long lLen(String key)")]),t._v(" "),e("td",[t._v("获取列表长度")])])])]),t._v(" "),e("h4",{attrs:{id:"set-相关的操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#set-相关的操作"}},[t._v("#")]),t._v(" Set 相关的操作")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"center"}},[t._v("NO")]),t._v(" "),e("th",[t._v("方法")]),t._v(" "),e("th",[t._v("描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("1")]),t._v(" "),e("td",[t._v("Set<String> sMembers(String key)")]),t._v(" "),e("td",[t._v("获取集合所有元素")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("2")]),t._v(" "),e("td",[t._v("Long sSize(String key)")]),t._v(" "),e("td",[t._v("获取集合大小")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("3")]),t._v(" "),e("td",[t._v("Boolean sIsMember(String key, Object value)")]),t._v(" "),e("td",[t._v("判断集合是否包含 value")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("4")]),t._v(" "),e("td",[t._v("String sRandomMember(String key)")]),t._v(" "),e("td",[t._v("随机获取集合中的一个元素")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("5")]),t._v(" "),e("td",[t._v("List<String> sRandomMembers(String key, long count)")]),t._v(" "),e("td",[t._v("随机获取集合 count 个元素")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("6")]),t._v(" "),e("td",[t._v("Set<String> sDistinctRandomMembers(String key, long count)")]),t._v(" "),e("td",[t._v("随机获取 count 个元素并去除重复的")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("7")]),t._v(" "),e("td",[t._v("Cursor<String> sScan(String key, ScanOptions options)")]),t._v(" "),e("td",[t._v("使用迭代器获取元素")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}}),t._v(" "),e("td"),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("8")]),t._v(" "),e("td",[t._v("Set<String> sIntersect(String key, String otherKey)")]),t._v(" "),e("td",[t._v("获取两个集合的交集")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("9")]),t._v(" "),e("td",[t._v("Set<String> sIntersect(String key, Collection<String> otherKeys)")]),t._v(" "),e("td",[t._v("获取 key 集合与多个集合的交集")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("10")]),t._v(" "),e("td",[t._v("Long sIntersectAndStore(String key, String oKey, String dKey)")]),t._v(" "),e("td",[t._v("key 集合与 oKey 的交集存储到 dKey 中")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("11")]),t._v(" "),e("td",[t._v("Long sIntersectAndStore(String key,Collection<String> oKeys,String dKey)")]),t._v(" "),e("td",[t._v("key 与多个集合的交集存储到 dKey 中")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}}),t._v(" "),e("td"),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("12")]),t._v(" "),e("td",[t._v("Set<String> sUnion(String key, String otherKeys)")]),t._v(" "),e("td",[t._v("获取两个集合的并集")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("13")]),t._v(" "),e("td",[t._v("Set<String> sUnion(String key, Collection<String> otherKeys)")]),t._v(" "),e("td",[t._v("获取 key 集合与多个集合的并集")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("14")]),t._v(" "),e("td",[t._v("Long sUnionAndStore(String key, String otherKey, String destKey)")]),t._v(" "),e("td",[t._v("key 集合与 oKey 的并集存储到 dKey 中")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("15")]),t._v(" "),e("td",[t._v("Long sUnionAndStore(String key,Collection<String> oKeys,String dKey)")]),t._v(" "),e("td",[t._v("key 与多个集合的并集存储到 dKey 中")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}}),t._v(" "),e("td"),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("16")]),t._v(" "),e("td",[t._v("Set<String> sDifference(String key, String otherKey)")]),t._v(" "),e("td",[t._v("获取两个集合的差集")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("17")]),t._v(" "),e("td",[t._v("Set<String> sDifference(String key, Collection<String> otherKeys)")]),t._v(" "),e("td",[t._v("获取 key 集合与多个集合的差集")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("18")]),t._v(" "),e("td",[t._v("Long sDifference(String key, String otherKey, String destKey)")]),t._v(" "),e("td",[t._v("key 与 oKey 集合的差集存储到 dKey 中")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("19")]),t._v(" "),e("td",[t._v("Long sDifference(String key,Collection<String> otherKeys,String dKey)")]),t._v(" "),e("td",[t._v("key 与多个集合的差集存储到 dKey 中")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}}),t._v(" "),e("td",[t._v("添加相关")]),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("20")]),t._v(" "),e("td",[t._v("Long sAdd(String key, String... values)")]),t._v(" "),e("td",[t._v("添加")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}}),t._v(" "),e("td",[t._v("删除相关")]),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("21")]),t._v(" "),e("td",[t._v("Long sRemove(String key, Object... values)")]),t._v(" "),e("td",[t._v("移除")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("22")]),t._v(" "),e("td",[t._v("String sPop(String key)")]),t._v(" "),e("td",[t._v("随机移除一个元素")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("23")]),t._v(" "),e("td",[t._v("Boolean sMove(String key, String value, String destKey)")]),t._v(" "),e("td",[t._v("将 key 集合中 value 移到 destKey 中")])])])]),t._v(" "),e("h4",{attrs:{id:"zset-数据类型操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#zset-数据类型操作"}},[t._v("#")]),t._v(" zset 数据类型操作")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"center"}},[t._v("NO")]),t._v(" "),e("th",[t._v("方法")]),t._v(" "),e("th",[t._v("描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("1")]),t._v(" "),e("td",[t._v("Set<String> zRange(String key, long start, long end)")]),t._v(" "),e("td",[t._v("获取元素,小到大排序,s 开始 e 结束位置")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("2")]),t._v(" "),e("td",[t._v("Set<TypedTuple<String>> zRangeWithScores(String key, long start, long end)")]),t._v(" "),e("td",[t._v("获取集合元素, 并且把 score 值也获取")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("3")]),t._v(" "),e("td",[t._v("Set<String> zRangeByScore(String key, double min, double max)")]),t._v(" "),e("td",[t._v("根据 score 范围查询元素,从小到大排序")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("4")]),t._v(" "),e("td",[t._v("Set<TypedTuple<String>> zRangeByScoreWithScores(key,double min,double max)")]),t._v(" "),e("td",[t._v("根据 score 范围查询元素,并返回 score")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("5")]),t._v(" "),e("td",[t._v("Set<TypedTuple> zRangeByScoreWithScores(key,double min,max,long start,end)")]),t._v(" "),e("td",[t._v("根据 score 查询元素,s 开始 e 结束位置")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}}),t._v(" "),e("td"),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("6")]),t._v(" "),e("td",[t._v("Set<String> zReverseRange(String key, long start, long end)")]),t._v(" "),e("td",[t._v("获取集合元素, 从大到小排序")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("7")]),t._v(" "),e("td",[t._v("Set<TypedTuple<String>> zReverseRangeWithScores(key, long start, long end)")]),t._v(" "),e("td",[t._v("获取元素,从大到小排序,并返回 score")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("8")]),t._v(" "),e("td",[t._v("Set<String> zReverseRangeByScore(String key, double min, double max)")]),t._v(" "),e("td",[t._v("根据 score 范围查询元素,从大到小排序")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("9")]),t._v(" "),e("td",[t._v("Set<TypedTuple> zReverseRangeByScoreWithScores(key,double min,double max)")]),t._v(" "),e("td",[t._v("根据 score 查询,大到小排序返回 score")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("10")]),t._v(" "),e("td",[t._v("Set<String> zReverseRangeByScore(key, double min, max, long start, end)")]),t._v(" "),e("td",[t._v("根据 score 查询,大到小,s 开始 e 结束")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}}),t._v(" "),e("td"),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("11")]),t._v(" "),e("td",[t._v("Long zRank(String key, Object value)")]),t._v(" "),e("td",[t._v("返回元素在集合的排名,score 由小到大")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("12")]),t._v(" "),e("td",[t._v("Long zReverseRank(String key, Object value)")]),t._v(" "),e("td",[t._v("返回元素在集合的排名,score 由大到小")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("13")]),t._v(" "),e("td",[t._v("Long zCount(String key, double min, double max)")]),t._v(" "),e("td",[t._v("根据 score 值范围获取集合元素的数量")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("14")]),t._v(" "),e("td",[t._v("Long zSize(String key)")]),t._v(" "),e("td",[t._v("获取集合大小")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("15")]),t._v(" "),e("td",[t._v("Long zZCard(String key)")]),t._v(" "),e("td",[t._v("获取集合大小")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("16")]),t._v(" "),e("td",[t._v("Double zScore(String key, Object value)")]),t._v(" "),e("td",[t._v("获取集合中 value 元素的 score 值")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}}),t._v(" "),e("td"),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("17")]),t._v(" "),e("td",[t._v("Long zUnionAndStore(String key, String otherKey, String destKey)")]),t._v(" "),e("td",[t._v("获取 key 和 oKey 的并集并存储在 dKey 中")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("18")]),t._v(" "),e("td",[t._v("Long zUnionAndStore(String key,Collection<String> otherKeys,String dKey)")]),t._v(" "),e("td",[t._v("获取 key 和多个集合并集并存在 dKey 中")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}}),t._v(" "),e("td"),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("19")]),t._v(" "),e("td",[t._v("Long zIntersectAndStore(String key, String otherKey, String destKey)")]),t._v(" "),e("td",[t._v("获取 key 和 oKey 交集并存在 destKey 中")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("20")]),t._v(" "),e("td",[t._v("Long zIntersectAndStore(String key,Collection<String> oKeys,String dKey)")]),t._v(" "),e("td",[t._v("获取 key 和多个集合交集并存在 dKey 中")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}}),t._v(" "),e("td"),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("21")]),t._v(" "),e("td",[t._v("Cursor<TypedTuple<String>> zScan(String key, ScanOptions options)")]),t._v(" "),e("td",[t._v("使用迭代器获取")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}}),t._v(" "),e("td",[t._v("添加相关")]),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("22")]),t._v(" "),e("td",[t._v("Boolean zAdd(String key, String value, double score)")]),t._v(" "),e("td",[t._v("添加元素,zSet 按 score 由小到大排列")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("23")]),t._v(" "),e("td",[t._v("Long zAdd(String key, Set<TypedTuple<String>> values)")]),t._v(" "),e("td",[t._v("批量添加,TypedTuple 使用见下面介绍")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}}),t._v(" "),e("td",[t._v("删除相关")]),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("24")]),t._v(" "),e("td",[t._v("Long zRemove(String key, Object... values)")]),t._v(" "),e("td",[t._v("移除")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("25")]),t._v(" "),e("td",[t._v("Double zIncrementScore(String key, String value, double delta)")]),t._v(" "),e("td",[t._v("增加元素的 score 值,并返回增加后的值")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("26")]),t._v(" "),e("td",[t._v("Long zRemoveRange(String key, long start, long end)")]),t._v(" "),e("td",[t._v("移除指定索引位置的成员")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("27")]),t._v(" "),e("td",[t._v("Long zRemoveRangeByScore(String key, double min, double max)")]),t._v(" "),e("td",[t._v("根据指定的 score 值的范围来移除成员")])])])]),t._v(" "),e("p",[e("strong",[t._v("批量添加时TypedTuple的使用：")])]),t._v(" "),e("ul",[e("li",[t._v("TypedTuple<String> typedTuple = new DefaultTypedTuple<String>(value,score)")]),t._v(" "),e("li",[t._v("TypedTuple<String> typedTuple = new DefaultTypedTuple<String>(value,score)")]),t._v(" "),e("li",[t._v("TypedTuple<String> typedTuple = new DefaultTypedTuple<String>(value,score)")]),t._v(" "),e("li",[t._v("TypedTuple<String> typedTuple = new DefaultTypedTuple<String>(value,score)")])])])}),[],!1,null,null,null);e.default=_.exports}}]);