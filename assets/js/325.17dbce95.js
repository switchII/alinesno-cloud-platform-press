(window.webpackJsonp=window.webpackJsonp||[]).push([[325],{699:function(t,n,a){"use strict";a.r(n);var e=a(8),s=Object(e.a)({},(function(){var t=this,n=t._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"日志数据分析"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#日志数据分析"}},[t._v("#")]),t._v(" 日志数据分析")]),t._v(" "),n("h2",{attrs:{id:"示例"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#示例"}},[t._v("#")]),t._v(" 示例")]),t._v(" "),n("p",[t._v("以下为接入示例的"),n("code",[t._v("hive")]),t._v("日志接入大数据平台示例文件文件"),n("a",{attrs:{href:"#"}},[t._v("示例")])]),t._v(" "),n("h2",{attrs:{id:"本内容你将获得"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#本内容你将获得"}},[t._v("#")]),t._v(" 本内容你将获得")]),t._v(" "),n("ul",[n("li",[t._v("日志接入数据中台进行分析采集")]),t._v(" "),n("li",[t._v("日志的定时清理和迁移备份")]),t._v(" "),n("li",[t._v("集成自动化运维能力集成")])]),t._v(" "),n("h2",{attrs:{id:"使用场景"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用场景"}},[t._v("#")]),t._v(" 使用场景")]),t._v(" "),n("p",[t._v("ES这里集成的主要目标是为了日志的采集监控，存储空间和数据分析能力这里并不做太多的\n处理，我们建议每个服务有自己的职责，数据分析采用数据中台组件进行分析管理，包括模型和维度的管理，数据的分析")]),t._v(" "),n("h2",{attrs:{id:"接入配置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#接入配置"}},[t._v("#")]),t._v(" 接入配置")]),t._v(" "),n("p",[t._v("这里主要分几部分，主要从备份要求、运维自动化、数据导入几个角度，数据分析此为数据治理章节，\n这里不做过多的描述")]),t._v(" "),n("h3",{attrs:{id:"数据备份"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#数据备份"}},[t._v("#")]),t._v(" 数据备份")]),t._v(" "),n("p",[t._v("这里的备份主要指的是导入es中，一般日志数据建议是保留6个月(等保要求)，然后导入数据仓库中，导入脚本如下")]),t._v(" "),n("div",{staticClass:"language-sh extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 待补充脚本")]),t._v("\n\n")])])]),n("h3",{attrs:{id:"运维自动化"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#运维自动化"}},[t._v("#")]),t._v(" 运维自动化")]),t._v(" "),n("p",[t._v("这里主要指的是定时的备份管理，这里集成jenkins+ansible+dingtalk的集成配置能力")]),t._v(" "),n("p",[t._v("Jenkinsfile的配置")]),t._v(" "),n("div",{staticClass:"language-jenkinsfile extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('pipeline {\n    agent any\n\n    environment {\n    \t// 构建参数\n        PROJECT_NAME = \'elasticsearch-watcher-backup-test\'\n        PROJECT_DESC = \'日志导入应用链接状态巡检\'\n        PRO_VERSION = \'2.1.3-Alpha\'\n\n        // ansible-playbook配置\n       \tINVENTORY_YML = "/hosts/hosts.yml"\n       \tANSIBLE_PLAYBOOK = "/ansible/elasticsearch-watcher-backup-test.yml"\n\n        // 通知\n      \tNOTICE = "dingtalk"\n       \tDINGTALK_ROBOT = "alinesno-operation-dingtalk-robot"\n    }\n\n   \t// 每天晚上22点执行1次导入\n    triggers {\n        cron(\'0 22 * * *\')\n    }\n\n    options {\n        buildDiscarder(logRotator(numToKeepStr: \'2\', artifactNumToKeepStr: \'7\', daysToKeepStr: \'5\'))\n    }\n\n    stages {\n       stage(\'发布新的脚本\') {\n            steps {\n\t\t\t\tsh label: \'\', script: \'\'\'\n\t\t\t\t\texport ANSIBLE_CALLBACK_WHITELIST=json\n\t\t\t\t\texport ANSIBLE_STDOUT_CALLBACK=json\n\n\t\t\t\t\tansible-playbook \\\n\t\t\t\t\t\t-i ${WORKSPACE}${INVENTORY_YML} \\\n\t\t\t\t\t\t${WORKSPACE}${ANSIBLE_PLAYBOOK} > ${WORKSPACE}/url_status.json\n\n\t\t\t\t\tcat ${WORKSPACE}/url_status.json\n\t\t\t\t\'\'\'\n            }\n       }\n\n       stage(\'发送报告到监控中心\') {\n            steps {\n            \tscript {\n\t\t\t\t   AJAX_RESULT_RESPONSE = sh (\n\t\t\t\t\t\tscript: \'curl -F "file=@${WORKSPACE}/url_status.json" -X POST "http://alinesno-transfer.admin.beta.linesno.com/api/v2/inspect"\' ,\n\t\t\t\t\t\treturnStdout: true\n\t\t\t\t\t).trim()\n\t\t\t\t\techo "提交到报告中心结果: ${AJAX_RESULT_RESPONSE}"\n\t\t\t\t}\n            }\n        }\n\n    }\n\n    // 发送结果通知\n    post {\n        failure {\n            dingtalk (\n                robot: "${env.DINGTALK_ROBOT}",\n                type:\'ACTION_CARD\',\n                atAll: false,\n                title: "日志导入应用链接检测巡检：${env.JOB_NAME}",\n                text: [\n                    "### [${env.JOB_NAME}](${env.JOB_URL}) ",\n                    \'---\',\n                    "- 描述：${PROJECT_DESC}" ,\n                    "- 巡检时间：${currentBuild.timeInMillis}" ,\n                    "- 提交报告中心：${AJAX_RESULT_RESPONSE}" ,\n                    "- 任务：[${currentBuild.displayName}](${env.BUILD_URL})",\n                    \'- 状态：<font color=#EE0000 >失败</font>\',\n                    "- 持续时间：${currentBuild.durationString}".split("and counting")[0],\n                    "- 执行人：${currentBuild.buildCauses.shortDescription}",\n                ]\n           )\n        }\n        success {\n            dingtalk (\n                robot: "${env.DINGTALK_ROBOT}",\n                type:\'ACTION_CARD\',\n                atAll: false,\n                title: "日志导入应用链接检测巡检：${env.JOB_NAME}",\n                text: [\n                    "### [${env.JOB_NAME}](${env.JOB_URL}) ",\n                    \'---\',\n                    "- 描述：${PROJECT_DESC}" ,\n                    "- 巡检时间：${currentBuild.timeInMillis}" ,\n                    "- 提交报告中心：${AJAX_RESULT_RESPONSE}" ,\n                    "- 任务：[${currentBuild.displayName}](${env.BUILD_URL})",\n                    \'- 状态：<font color=#005bd4 >成功</font>\',\n                    "- 持续时间：${currentBuild.durationString}".split("and counting")[0],\n                    "- 执行人：${currentBuild.buildCauses.shortDescription}",\n                ]\n           )\n        }\n    }\n}\n')])])]),n("p",[t._v("ansible的yaml配置")]),t._v(" "),n("div",{staticClass:"language-ansible extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("# 待补充脚本\n\n")])])]),n("p",[t._v("集成之后的效果配置效果，有可视化的平台和定时处理，同时结果预警通知。")]),t._v(" "),n("h2",{attrs:{id:"其它"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#其它"}},[t._v("#")]),t._v(" 其它")]),t._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://codeantenna.com/a/etQELljMN3",target:"_blank",rel:"noopener noreferrer"}},[t._v("Jenkinsfile-pipeline定时任务示例"),n("OutboundLink")],1)])])])}),[],!1,null,null,null);n.default=s.exports}}]);